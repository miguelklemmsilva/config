echo $ZDOTDIR\

which brew\

brew
cd ../..
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
git reset --hard
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
git stash
cargo build
git stash pop
cargo build
cargo build
cargo build
git add .
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
tmux a
tmux a
tmux a
tmux a
nvim ~/.config/.zshrc
tmux a
tmux a
tmux a
cd Developer
uv init
ls
rm -rf main.py pyproject.toml 
rm -rf README.md
ls
rm -rf .python-version
rm -rf .git
ls
rm -rf .gitignore
mkdir pandas
cd pandas
uv init
nvim .
uv add pandas
uv add pd
uv run
uv install python3
uv python3 install
uv python install
uv run
uv  run main.py
uv add pandas
cd ..
rm -rf pandas
mkdir pd
cd pd
uv init
uv add pandasa
uv add pandas
nvim main.py
uv run pandas
uv run main.py
\:q
cd ..
mkdir pd
rm -rf pd
mkdir pd
cd pd
uv init
uv add pandas
nvim main.py
uv run main.py
uv sync
nvim main.py
uv source
source .venv/bin/activate
nvim main.py
nvim main.py
cd .config
nvim .zshrc
source ~/.config/.zshrc
source ~/.config/.zshrc
git pull
exec $SHELL
cd ~/Developer/rust/wgsl-analyzer
lazygit
git pull
git swithc -c "fix-diagnostics"
git switch -c "fix-diagnostics"
cargo build
ls
cargo build
cargo build
lazygit
lazygit
cargo build --release
cargo build --release
cargo build --releasE
cargo build --release
nvim .
nvim .
nvim .
nvim .
cargo build --release
nvim .
cd crates
ls
cd ..
find . -name '*.rs' | xargs -I {} cat }
find . -name '*.rs' | xargs -I {} cat {} | wc -l
nvim ~/.config/.zshrc
nvim ~/.config/.zshrc
source ~/.config/.zshrc
exec $SHELL
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
cargo build
git add .
git add .
git commit -m "add diagnostics back to frontend"
git push
    git push --set-upstream origin fix-diagnostics
git add .
git commit --amend --no-edit
git push --force-with-lease origin main
git push --force-with-lease origin main
git add .
git commit --amend --no-edit
git push --force-with-lease origin main
git push --force origin main
git add .
git push --force origin main
git push --force origin fix-diagnostics 
git add .
git commit -m "linting"
git push
git add .
git commit -m "config check"
git push
cargo run
cargo build --release
git add .
git commit -m "clarify"
git push
git add .
git commit -m "add as cast"
git push
git commit --amend
git push --force origin fix-diagnostics 
Run cargo clippy --workspace --all-targets --all-features -- -Dwarnings
cargo clippy --workspace --all-targets --all-features -- -Dwarnings
cargo clippy --workspace --all-targets --all-features -- -Dwarnings
git add. 
git add .
git commit -m "lint"
git push
z .config
nvim .
z nvim
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
z extreme_bevy
cargo run --release
cargo add bevy_ggrs
cargo install matchbox_server
matchbox_server
z minecraft-server-service
cat ~/.oci/oci_api_key_public.pem
cd .config
z extreme_bevy
cargo add bevy_matchbox
cargo add bevy_matchbox
cargo add bevy_matchbox --features ggrs
